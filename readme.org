Refer
- [[https://ubuntuhandbook.org/index.php/2022/06/install-gnu-emacs-28-1-ubuntu-22-04-20-04/][install emacs28 on ubuntu]]
- [[https://www.bhw.name/assets/blog/installation-of-spacemacs.html][install emacs on WSL2]]

* 部署 Emacs for Windows
- 从 release 下载部署包;
- 在 Windows 上设置环境变量 HOME (emacs 根据这个变量查找配置文件);
- 将部署包中的 emacs-28.1.zip 解压到 =$HOME/= ;
- 将部署包中的 space+emacs.d.win11.vx.zip 中的内容解压到 =$HOME/= , 其中:
    - =.emacs.d= 是 [[https://github.com/syl20bnr/spacemacs.git][spacemacs]] 配置程序,
      是原版 spacemacs 加上使用 emacs 过程中安装的 packages (也可以直接从 github 上拉取);
    - =.spacemacs.d= 是 spacemacs 的配置文件, 是用户配置的主体, 也是本工程对应的文件夹(也可以直接从 github 上拉取);
- 安装 sarasa 字体(本地文件存于 =$部署包/sarasa-gothic-ttf-0.42.5.7z=), 不用全部解压(体积太大), 安装自己需要的就行;
    - 推荐安装: =sarasa-fixed-sc-xxx.ttf= , =sarasa-term-sc-xxx.ttf=
    - 也可以直接从 Windows AppStore 安装 sarasa 字体;
- 安装 NerdFontsSymbolsOnly 字体(本地文件存于 =$部署包/NerdFontsSymbolsOnly.zip=);
- 其他文件:
    - =all-the-icons.el= : 包含 all-the-icons 字体(位于: =all-the-icons.el\fonts=), 其他的不重要;
        - 安装了 NerdFontsSymbolsOnly 之后是否不需要 all-the-icons 了? 如果还需要就安装 all-the-icons 字体;
    - =ag-2020-07-05_2.2.0-58-g5a1c8d8-x64.zip= : 包含 ag.exe 工具, 若 =.emacs.d/bin= 中没有 ag.exe, 请将其解压过去;
    - =spacemacs-develop.zip= : 从 spacemacs 官网下载的配置程序, 对应 =.emacs.d= ;
- 安装 Latex 支持. 详见 [[id:0562c32c-387b-443b-b420-a00bebb2fe0b][HOWTO/如何安装 Latex 支持]] ;
- 安装 Bash 支持, 详见 [[id:10b66c08-c902-4a71-bfdd-ec078ee04f92][HOWTO/如何安装 Bash 支持(for Windows)]] ;
- 设置 =default-directory= , Windows 推荐使用 Shortcut 属性 =Start In= 来设置;

* 从头安装 Emacs
- Use emacs v28.1 , 其他版本可能出现更多的问题.
    #+begin_src shell
    # Method 1) Use snap. See https://snapcraft.io/emacs
    sudo snap install emacs --channel=28.x/stable --classic
    sudo snap remove emacs  # 删除的命令
    # Method 2) Use PPA
    sudo apt remove --autoremove emacs emacs-common  # 删除 ubuntu 自带的版本.
    sudo add-apt-repository ppa:kelleyk/emacs
    sudo apt update
    # Here you may replace emacs28 with emacs28-nox for text-only interface and/or emacs28-nativecomp with native compilation enabled.
    sudo apt install emacs28
    # 如果要删除, 使用下面的命令
    sudo apt remove --autoremove emacs28 emacs28-common
    sudo add-apt-repository --remove ppa:kelleyk/emacs
    #+end_src
- set env =HOME= (for Windows) .
- Makedir =$HOME/onedrive/code-snippets=
    #+begin_src shell
    mkdir -p ~/onedrive/code-snippets  # for linux
    #+end_src
- Install Sarasa Font:
    - Windows 可以直接在 AppStore 中安装;
    - Ubuntu 按照如下方式安装:
      #+begin_src shell
      sudo cp -rf /mnt/d/download/sarasa-gothic-ttf-0.42.5  /usr/share/fonts/
      cd /usr/share/fonts   # 切换到字体目录？
      sudo mkfontscale && sudo mkfontdir && sudo fc-cache -fv  # mkfont* 命令似乎不重要?
      #+end_src
- Install all-the-icons Fonts
    - See https://github.com/domtronn/all-the-icons.el
    - See https://emacs-china.org/t/widows-spacemacs-doom-line-manual-install-all-the-icons-install-fonts/13613
    - 若不安装, doom-modeline 的 icons 会乱码.
    - 对于 Windows, 直接将 [[https://github.com/domtronn/all-the-icons.el/tree/master/fonts][all-the-icons fonts]] 文件拖到 settings -> 个性化 -> 字体 -> 添加字体 里面.
    - 对于 Ubuntu, 可以使用如下方法:
      #+begin_src shell
      # 使用 M-x all-the-icons-install-fonts 安装字体的时候, 很可能连接不上 github . 此时可以手动安装:
      git clone https://github.com/domtronn/all-the-icons.el
      cp -rf ./all-the-icons/fonts /usr/share/fonts/all-the-icons  # shell 会创建文件夹 /usr/share/fonts/all-the-icons
      sudo fc-cache -fv
      #+end_src
- Install Nerd Fonts
    - doom-modeline 改为使用 nerd-fonts 来显示 icon (之前使用 all-the-icons), 若不安装, doom-modeline 中的 icon 会显示乱码;
    - 到官网搜索"Symbols Only"下载, 官网地址: https://www.nerdfonts.com/font-downloads
    - 或者直接从 [[https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/NerdFontsSymbolsOnly.zip][Symbols Only 字体下载地址]] 下载;
- Make =$HOME/.emacs.d=
    - 官方推荐使用 spacemacs devolop 分支(而非 master 分支, 说是维护的很慢);
    #+begin_src shell
    git clone --branch develop https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
    # checkout to 72bc84de9f83322ca5ac4b554ba9069e570df368
    #+end_src
- Make =$HOME/.spacemacs.d=
    #+begin_src shell
    # 如果是 ubuntu 版本, 就使用 master 分支;
    git clone --branch windows git@github.com:Tyushang/.spacemacs.d.ivy.git $HOME/.spacemacs.d
    #+end_src
- 更换 ELPA 源以加快安装包下载速度(如果需要的话). 详见:[[id:920f7cf8-0338-42c5-83e9-372086963a4b][HOWTO/如何更换 ELPA 源]] ;

* HOWTO
** 如何更换 ELPA 源
:PROPERTIES:
:ID:       920f7cf8-0338-42c5-83e9-372086963a4b
:END:
- See https://mirrors.tuna.tsinghua.edu.cn/help/elpa/
#+begin_src elisp
;; vim .emacs.d/init.el , 添加如下代码:
(defun dotspacemacs/user-init ()
  ;; ___________________________Set ELPA Source_________________________________
  ;; 如果是 spacemacs/master 分支, 设置变量 configuration-layer--elpa-archives
  ;; 如果是 spacemacs/develop 分支, 使用 configuration-layer-elpa-archives 代替原来的 configuration-layer--elpa-archives （ -- 换成 - ）
  ;; 如果不是 spacemacs . 应该设置变量 package-archives
  ;; See https://mirrors.tuna.tsinghua.edu.cn/help/elpa/
  (setq configuration-layer-elpa-archives
        '(
          ;; gnu 一般是必备的，其它的 elpa 中的包会依赖 gnu 中的包
          ("gnu-cn"           . "http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")
          ;; nongnu 建议启用，类似于 melpa 但是 Emacs 官方维护的
          ("nongnu-cn"        . "http://mirrors.tuna.tsinghua.edu.cn/elpa/nongnu/")
          ;; stable-melpa 依据源码的 Tag （Git）升级，数量比 melpa 少，因为很多包作者根本不打 Tag
          ("stable-melpa-cn"  . "http://mirrors.tuna.tsinghua.edu.cn/elpa/stable-melpa/")
          ;; ;; melpa 滚动升级，收录了的包的数量最大
          ;; ("melpa-cn"         . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/")
          ;; ;; org 仅仅为了 org-plus-contrib 这一个包，org 重度用户使用
          ;; ("org-cn"           . "http://mirrors.tuna.tsinghua.edu.cn/elpa/org/")

          ;; ;; 有些时候需要从官方源安装包, 否则安装的包会出一些莫名其妙的错误.
          ;; ("melpa"          . "https://melpa.org/packages/")
          ;; ("melpa-stable"   . "https://stable.melpa.org/packages/")
          ;; ("nongnu"         . "https://elpa.nongnu.org/nongnu/")
          )
        )
  ;; 其他代码
  )
#+end_src

** 如何安装 Latex 支持
:PROPERTIES:
:ID:       0562c32c-387b-443b-b420-a00bebb2fe0b
:END:
- See https://orgmode.org/worg/org-tutorials/org-latex-preview.html
- See [[file://./emacs.org]]
- windows 建议安装 miktex . 直接下载安装包, 比 texlive-full 方便的多;
    - [miktex 下载地址]https://miktex.org/download
    - 建议以管理员方式运行安装程序, 为所有用户安装 miktex . 为单个用户安装的未尝试;
    - [Trouble] can't find latex you need to install the programs: latex ...
        - 原因: emacs 未引入"miktex bin 目录(如: C:\Program Files\MiKTeX\miktex\bin\x64\)"到 Path.
        - 解决:
            - 确认 miktex 安装后, 将"miktex bin 目录"添加到了 windows 环境变量 Path 中;
            - 再确认 spacemacs 引入了正确的 Path 环境变量(使用 SPC fee 查看 ~/.spacemacs.env 的内容). 可能需要重启电脑.
- 安装 dvipng 以提供 latex formula 转图片的能力（似乎 texlive-full / miktex 已包含该软件？）;
- 在 org 文档中使用命令 org-latex-preview (shortcut: C-(cxl)) 开启预览;
    - Fuck: 在 windows 中, emacs var: ~temporary-file-directory~ & ~url-temporary-directory~ 默认都是 ~C:/Users/$user/AppData/Local/Temp/~ ,
      但是 emacs 在这个目录中进行一些操作的时候会出问题, 将上述两个变量设置为 =~/cache/= 就好了.

** 如何安装 Bash 支持(for Windows)
:PROPERTIES:
:ID:       10b66c08-c902-4a71-bfdd-ec078ee04f92
:END:
- 在 Windows 中安装 msys2/git/... 之类的 bash-模拟器;
- 将 bash-模拟器 的 bash-dir(放置 bash 命令的目录) 添加到 Windows 全局环境变量 Path 中;
    - 比如 =msys2 bash-dir: C:\msys64\usr\bin=, =git bash-dir: C:\Program Files\Git\usr\bin=
重启 emacs 应该就能成功, 如果出现问题, 下面的内容可能有帮助:
- 启动 emacs, 检查环境变量和执行目录, 确保 bash-dir 添加到其中:
    - 使用 ~M-x getenv~ 获取 emacs 得到的环境变量;
    - 查看变量 ~exec-path~ 获取 emacs 执行目录;
- 可以使用 ~M-x counsel-grep~ 看看 ~grep~ 命令能否正常调用;
- 在使用 ~M-x dired~ 的时候, 它需要命令 ~ls~ 来排序, 如果 emacs 找不到 ~ls~, 会报如下错误:
  #+begin_src elisp
  ‘ls-lisp-use-insert-directory-program’ is nil. The package ‘dired-quick-sort’ will not work
  and thus is not set up by ‘dired-quick-sort-setup’. Set it to t to suppress this warning.
  Alternatively, set ‘dired-quick-sort-suppress-setup-warning’ to suppress warning and skip setup silently.
  ;; 报错来源于 dired-quick-sort.el, 其中还明确了:
  ;; To make full use of this extensions, please make sure that the variable
  ;; `insert-directory-program' points to the GNU version of ls.
  #+end_src
- 如果直接在 ~dotspacemacs/user-init()~ 中将命令工具目录添加到设置环境变量和执行目录会有问题:
  #+begin_src elisp
  ;; 此处添加会导致 spacemacs 重新配置, 但是, 在 windows 环境变量中添加, 是能够正常工作的;
  (let ((bash-dir "C:\Program Files\Git\usr\bin"))
    (setenv "PATH" (concat bash-dir ";" (getenv "PATH")))
    (add-to-list 'exec-path bash-dir))
  #+end_src


* 其他功能
** 如何开启 counsel-ag 功能
[[https://github.com/ggreer/the_silver_searcher][ag 官网]] 下载 ag.exe 并放置于 emacs 执行目录下(emacs 变量 =exec-path= 列出的目录).
这里我使用 =~/.emacs.d/bin= 目录;

** 如何在 Windows 中如何使用 Server-Client 模式?
- https://emacs.stackexchange.com/questions/35545/setting-up-emacsclient-on-ms-windows


* Troubles
- Enabling debug-on-error :: There are some ways to enable debug-on-error:
    - Start Emacs with emacs --debug-init. Use this for errors that occur at startup.
    - 在运行过程中使用: ~M-x toggle-debug-on-error~
    Now that debug-on-error is on, recreate the error. A window should pop up with a backtrace.

- Windows, 如何启动 emacs , 而不出现 cmd 窗口? ::
    - https://emacs.stackexchange.com/questions/20213/how-to-start-emacs-without-the-cmd-exe-window-on-ms-windows
    - 使用 runemacs.exe 而非 emacs.exe ;

- Windows, Found 3 orphan package(s) to delete... --> deleting doom-modeline... [0/0]
    - https://emacs.stackexchange.com/questions/58566/how-to-use-doom-modeline-in-spacemacs
    #+begin_src lisp
    (defun dotspacemacs/init ()
      "Initialization function.
    This function is called at the very startup of Spacemacs initialization before layers configuration.
    You should not put any user code in there besides modifying the variable values."
      ;; This setq-default sexp is an exhaustive list of all the supported
      ;; spacemacs settings.
      (setq-default
      ;; To solve:
      ;;     Found 3 orphan package(s) to delete... --> deleting doom-modeline... [3/3]
      ;; See https://emacs.stackexchange.com/questions/58566/how-to-use-doom-modeline-in-spacemacs
      dotspacemacs-mode-line-theme '(doom :separator-scale 1.5)
      ...
    )
    #+end_src

- Auto-evilification ::
    #+begin_src shell
    Auto-evilification could not remap these functions in map 'org-agenda-mode-map': - 'org-agenda-filter-by-tag' originally mapped on '\'
    #+end_src
    - 解决方法:
    #+begin_src elisp
    ;; vim ./.emacs.d/elpa/develop/org-9.6.3/org-agenda.el
    ;; 注释掉报错的案件绑定. 比如下面这些行:
    (org-defkey org-agenda-mode-map "G" #'org-agenda-toggle-time-grid)
    (org-defkey org-agenda-mode-map "n" #'org-agenda-next-line)
    (org-defkey org-agenda-mode-map "\\" #'org-agenda-filter-by-tag)
    (org-defkey org-agenda-mode-map "|" #'org-agenda-filter-remove-all)
    #+end_src

- Unrecognized keyword: :spacediminish :: 启动 emacs 之后, 弹出如下内容的 Warning buffer:
    #+begin_src shell
    Error (use-package): Failed to parse package column-enforce-mode: use-package: Unrecognized keyword: :spacediminish Disable showing Disable logging
    Error (use-package): Failed to parse package highlight-indentation: use-package: Unrecognized keyword: :spacediminish Disable showing Disable logging
    Error (use-package): Failed to parse package indent-guide: use-package: Unrecognized keyword: :spacediminish Disable showing Disable logging
    Error (use-package): Failed to parse package fill-column-indicator: use-package: Unrecognized keyword: :spacediminish Disable showing Disable logging
    #+end_src
    - https://gitter.im/syl20bnr/spacemacs/archives/2021/08/04
    - 在 .emacs.d 目录中搜索"spacediminish", 将其注释掉. 具体位置:
      #+begin_src lisp
      ;; vim .emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el
      :spacediminish ("⑧" "8")))      ;; line  60: for column-enforce-mode
      :spacediminish ((" ⓗi" " hi")   ;; line  87: for highlight-indentation
      :spacediminish (" ⓘ" " i")))    ;; line 144: for indent-guide

      ;; vim .emacs.d/layers/+spacemacs/spacemacs-visual/packages.el
      :spacediminish ((fci-mode " ⓕ" " f"))  ;; line 73: for fill-column-indicator
      #+end_src

- "Indentation setup for shell type sh" ::
  在 shell code-block 中, 每次 new-line 都会出现 "Indentation setup for shell type sh" 的 minibuffer, 如何才能不弹出?
    - https://emacs.stackexchange.com/questions/52846/how-to-remove-message-indentation-setup-for-shell-type-sh
    - M-x sh-set-shell -> choose bash . 之后就不出现此 minibuffer 了;

- evil-want-keybinding :: Message buffer 显示如下异常:
    #+begin_src shell
    Warning (evil-collection): `evil-want-keybinding' was set to nil but not before loading evil.
    Make sure to set `evil-want-keybinding' to nil before loading evil or evil-collection.
    See https://github.com/emacs-evil/evil-collection/issues/60 for more details.
    #+end_src
    - 解决 :: 似乎第二次启动就不会出现这个异常了.

- 调用 org-mode 出现 `Invalid function: org-assert-version` 异常.
    - 解决 :: 似乎是从 cn 安装的 org 相关的包有问题, 重新从 melpa 源安装这些包就好了:
        - 1) 删除 org 相关的包:
            #+begin_src bash
            frank@wsl:/mnt/c/home/.emacs.d$ find ./elpa -type d -name "*markdown*"
            ./elpa/develop/evil-collection-20230312.2309/modes/markdown-mode
            ./elpa/markdown-mode-20230331.913
            ...
            #+end_src
        - 2) 添加 elpa 源: ~("melpa"    . "http://melpa.org/packages/")~
        - 3) 重新安装 org 相关的包, 此时似乎是从 melpa 源安装这些包;

- 在 markdown 文档中使用 ~M-x org-latex-preview~ 出错:
    #+begin_src bash
    Warning (org-element-cache): org-element--cache: Org parser error in memo.md::1829. Resetting.
    The error was: (error "rx ‘**’ range error")
    #+end_src
    - 原因: 似乎是安装包的来源不对引起的.
    - 解决: 一开始就使用 melpa-china 的源来安装就不会出现这个问题(其他安装不上的包再使用 melpa 源来安装);
      #+begin_src lisp
      (defun dotspacemacs/user-init ()
        ;; ___________________________Set ELPA Source_________________________________
        (setq configuration-layer-elpa-archives
              '(
                ;; 中国源: See https://elpamirror.emacs-china.org/
                ("melpa-cn" . "http://1.15.88.122/melpa/")
                ("org-cn"   . "http://1.15.88.122/org/")
                ("gnu-cn"   . "http://1.15.88.122/gnu/")

                ;; 先使用中国源(注释掉后面的代码)安装包, 安装完成之后,
                ;; 再针对有问题的包使用 melpa 源来安装(注释掉中国源, 并打开后面的注释)

                ;; 有些时候需要从官方源安装包, 否则安装的包会出一些莫名其妙的错误.
                ("melpa"          . "https://melpa.org/packages/")
                ("nongnu"         . "https://elpa.nongnu.org/nongnu/")
              )
        )
        ;; 其他代码
        )
      #+end_src
    - 应该是 org 版本问题, 使用中国源的 org-20210929 就没有问题, 使用清华源的 org-6.9.11 版本就会出现这个问题.

- IMPORTANT: please install Org from GNU ELPA as Org ELPA will close before Org 9.6
    - 原因 :: 使用中国源的 org-20210929, 在打开 org 文件时, 会弹出这个信息. 使用较高版本的 org 就没有这个问题;
    - 解决 :: 换成腾讯源的 org 版本:
        #+begin_src sh
        # M-x org-version 显示:
        Org mode version 9.4.6 (9.4.6-13-g4be129-elpa @ c:/Home/.emacs.d/elpa/develop/org-20210920/)
        #+end_src
        同时, 也能兼顾上一个异常(不能在 Markdown 中使用 org-latex-preview).

- spacemacs 启动时显示：Found 1 orphan package(s) to delete...--> deleting imenu-list... [0/0]
    - 原因 : imenu-list 未包含在 spacemacs 默认加载的 layers 中，所以 spacemacs 认为 imenu-list 是 orphan package ，在下次启动 emacs 时会被删除
    - 解决 : 在 spacemacs 配置文件 -> dotspacemacs/layers 中，将 imenu-list 加入到 additional-packages 列表，如： dotspacemacs-additional-packages '(imenu-list)

- spacemacs 启动时显示：Package cl is deprecated
    - 解决 : 在 .emacs.d/init.el 中添加： ~(setq byte-compile-warnings '(cl-functions))~




